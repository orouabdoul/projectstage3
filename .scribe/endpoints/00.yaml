name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/role
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Liste des roles'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":"","body":[]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '59'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/role
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Ajouter un role'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'nom de role'
        required: true
        example: dolorum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: dolorum
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/role/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Récupérer les informations d'un role"
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the role.'
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"success":false,"message":"role not found.","body":[]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '58'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/role/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Modifier un role'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the role.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'nom de role'
        required: true
        example: officiis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: officiis
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/role/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Supprimer un role'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the role.'
        required: true
        example: 8
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 8
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Liste des utilisateurs'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":"","body":[]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '57'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Ajouter un utilisateur'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: prenom
        required: true
        example: necessitatibus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      last_name:
        name: last_name
        description: nom
        required: true
        example: sit
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      sexe:
        name: sexe
        description: sexe
        required: false
        example: cum
        type: required
        enumValues: []
        exampleWasSpecified: false
        custom: []
      phone:
        name: phone
        description: 'numero telephone'
        required: true
        example: 19
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      department:
        name: department
        description: departement
        required: true
        example: nam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      common:
        name: common
        description: commune
        required: true
        example: ea
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      borough:
        name: borough
        description: arrondissement
        required: true
        example: animi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      neighborhood:
        name: neighborhood
        description: quartier
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'mot de passe'
        required: true
        example: ';V._[smCf'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      role_id:
        name: role_id
        description: ''
        required: true
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      first_name: necessitatibus
      last_name: sit
      sexe: cum
      phone: 19
      department: nam
      common: ea
      borough: animi
      neighborhood: et
      password: ';V._[smCf'
      role_id: 15
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/user/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Récupérer les informations d'un utilisateur"
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"success":false,"message":"user not found.","body":[]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '56'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/user/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Modifier un utilisateur'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 14
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 14
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: prenom
        required: true
        example: ducimus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      last_name:
        name: last_name
        description: nom
        required: true
        example: quidem
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      sexe:
        name: sexe
        description: sexe
        required: false
        example: voluptatum
        type: required
        enumValues: []
        exampleWasSpecified: false
        custom: []
      phone:
        name: phone
        description: 'numero telephone'
        required: true
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      department:
        name: department
        description: departement
        required: true
        example: expedita
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      common:
        name: common
        description: commune
        required: true
        example: tempora
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      borough:
        name: borough
        description: arrondissement
        required: true
        example: tempora
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      neighborhood:
        name: neighborhood
        description: quartier
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: 'mot de passe'
        required: true
        example: 'coKde:UM2'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      role_id:
        name: role_id
        description: ''
        required: true
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      first_name: ducimus
      last_name: quidem
      sexe: voluptatum
      phone: 6
      department: expedita
      common: tempora
      borough: tempora
      neighborhood: et
      password: 'coKde:UM2'
      role_id: 12
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/user/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Supprimer un utilisateur'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 18
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 18
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/field
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Liste des champs'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":"","body":[]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '55'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/field
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Ajouter un champs'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'nom de champs'
        required: true
        example: rerum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      location:
        name: location
        description: 'lieux de champs'
        required: true
        example: itaque
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      surface:
        name: surface
        description: 'superficie du champs'
        required: true
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      observation:
        name: observation
        description: 'observation du champs'
        required: true
        example: omnis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      user_id:
        name: user_id
        description: ''
        required: true
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: rerum
      location: itaque
      surface: 6
      observation: omnis
      user_id: 6
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/field/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Récupérer les informations d'un champ"
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the field.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"success":false,"message":"field not found.","body":[]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '54'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/field/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Modifier un champ'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the field.'
        required: true
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 12
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'nom de champs'
        required: true
        example: totam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      location:
        name: location
        description: 'lieux de champs'
        required: true
        example: id
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      surface:
        name: surface
        description: 'superficie du champs'
        required: true
        example: 13
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      observation:
        name: observation
        description: 'observation du champs'
        required: true
        example: recusandae
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      user_id:
        name: user_id
        description: ''
        required: true
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: totam
      location: id
      surface: 13
      observation: recusandae
      user_id: 15
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/field/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Supprimer un champ'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the field.'
        required: true
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 6
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/product
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Liste des produits'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":"","body":[]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '53'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/product
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Ajouter un produit'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'nom de produit'
        required: true
        example: reiciendis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      type_product:
        name: type_product
        description: 'type de produit'
        required: true
        example: omnis
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      quantity:
        name: quantity
        description: 'nombre de produit'
        required: true
        example: 19
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      price_unit:
        name: price_unit
        description: "prix unitaire d'un produit"
        required: true
        example: 13
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: 'description du produit'
        required: true
        example: 'Amet qui ut ut error porro.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      user_id:
        name: user_id
        description: ''
        required: true
        example: 7
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: reiciendis
      type_product: omnis
      quantity: 19
      price_unit: 13
      description: 'Amet qui ut ut error porro.'
      user_id: 7
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/product/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Récupérer les informations d'un produit"
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 6
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 6
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"success":false,"message":"product not found.","body":[]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '52'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/product/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Modifier un produit'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 18
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 18
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'nom de produit'
        required: true
        example: ullam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      type_product:
        name: type_product
        description: 'type de produit'
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      quantity:
        name: quantity
        description: 'nombre de produit'
        required: true
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      price_unit:
        name: price_unit
        description: "prix unitaire d'un produit"
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      description:
        name: description
        description: 'description du produit'
        required: true
        example: 'Enim quae iste sunt voluptatem omnis consequuntur laboriosam.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      user_id:
        name: user_id
        description: ''
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: ullam
      type_product: est
      quantity: 10
      price_unit: 5
      description: 'Enim quae iste sunt voluptatem omnis consequuntur laboriosam.'
      user_id: 2
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/product/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Supprimer un produit'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 15
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 15
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/harvest
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Liste des recoltes'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"message":"","body":[]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '51'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/harvest
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Ajouter une recolte'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      weight_coton:
        name: weight_coton
        description: 'poids de coton'
        required: true
        example: 4
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      price_unit:
        name: price_unit
        description: "prix unitaire d'un poid de coton"
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      date:
        name: date
        description: 'date de recolte'
        required: true
        example: nemo
        type: date
        enumValues: []
        exampleWasSpecified: false
        custom: []
      observation:
        name: observation
        description: 'obsertion de recolte'
        required: true
        example: minus
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      field_id:
        name: field_id
        description: ''
        required: true
        example: 18
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      weight_coton: 4
      price_unit: 2
      date: nemo
      observation: minus
      field_id: 18
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/harvest/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: "Récupérer les informations d'une recolte"
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the harvest.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 5
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"success":false,"message":"harvest not found.","body":[]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '50'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/harvest/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Modifier une recolte'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the harvest.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      weight_coton:
        name: weight_coton
        description: 'poids de coton'
        required: true
        example: 19
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      price_unit:
        name: price_unit
        description: "prix unitaire d'un poid de coton"
        required: true
        example: 14
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      date:
        name: date
        description: 'date de recolte'
        required: true
        example: id
        type: date
        enumValues: []
        exampleWasSpecified: false
        custom: []
      observation:
        name: observation
        description: 'obsertion de recolte'
        required: true
        example: maiores
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      field_id:
        name: field_id
        description: ''
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      weight_coton: 19
      price_unit: 14
      date: id
      observation: maiores
      field_id: 1
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/harvest/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Supprimer une recolte'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the harvest.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: 17
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
